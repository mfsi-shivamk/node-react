generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model movieComments {
  id        Int      @id @default(autoincrement())
  movieId   Int?
  userId    Int?
  text      String?  @db.Text
  createdAt DateTime @db.DateTime(0)
  updatedAt DateTime @db.DateTime(0)
  movies    movies?  @relation(fields: [movieId], references: [id])
  Users     Users?   @relation(fields: [userId], references: [id])

  @@index([movieId], name: "movieId")
  @@index([userId], name: "userId")
}

model movieRatings {
  id        Int      @id @default(autoincrement())
  movieId   Int?
  userId    Int?
  rating    Int?
  createdAt DateTime @db.DateTime(0)
  updatedAt DateTime @db.DateTime(0)
  movies    movies?  @relation(fields: [movieId], references: [id])
  Users     Users?   @relation(fields: [userId], references: [id])

  @@index([movieId], name: "movieId")
  @@index([userId], name: "userId")
}

model movies {
  id                Int             @id @default(autoincrement())
  name              String?         @db.VarChar(255)
  totalAvgRating    Decimal?        @db.Decimal(10, 2)
  totalRatingCount  Int?
  totalCommentCount Int?
  createdAt         DateTime        @db.DateTime(0)
  updatedAt         DateTime        @db.DateTime(0)
  movieComments     movieComments[]
  movieRatings      movieRatings[]
}

model SequelizeMeta {
  name String @id @db.VarChar(255)
}

model Sms {
  id        Int         @id @default(autoincrement())
  userId    Int?
  body      String?     @db.Text
  status    Sms_status? @default(initiated)
  otp       String?     @db.VarChar(255)
  sentAt    DateTime?   @db.DateTime(0)
  key       String?     @db.VarChar(255)
  createdAt DateTime    @db.DateTime(0)
  updatedAt DateTime    @db.DateTime(0)
  deletedAt DateTime?   @db.DateTime(0)
  Users     Users?      @relation(fields: [userId], references: [id])

  @@index([userId], name: "userId")
}

model Users {
  id            Int             @id @default(autoincrement())
  firstName     String?         @db.VarChar(255)
  lastName      String?         @db.VarChar(255)
  key           String?         @db.VarChar(255)
  phone         String?         @db.VarChar(255)
  email         String?         @unique @db.VarChar(255)
  createdAt     DateTime        @db.DateTime(0)
  updatedAt     DateTime        @db.DateTime(0)
  deletedAt     DateTime?       @db.DateTime(0)
  movieComments movieComments[]
  movieRatings  movieRatings[]
  Sms           Sms[]
}

enum Sms_status {
  initiated
  success
  failed
}
